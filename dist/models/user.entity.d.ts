import { Card } from './card.entity';
import { Town } from './town.entity';
import { Role } from './role.entity';
import { Device } from './device.entity';
import { Organization } from './organization.entity';
import { Model } from 'sequelize-typescript';
import { BillingInformation } from './billingInformation.entity';
import { HistoryPayment } from './historyPayments.entity';
import { Notifications } from './notifications.entity';
export declare class User extends Model<User> {
    idUser: number;
    idRole: number;
    idTown: number;
    idOrganization: number;
    email: string;
    password: string;
    firstName: string;
    lastName: string;
    mothersLastName: string;
    phone: string;
    passwordAlexa: string;
    passwordGoogle: string;
    passwordFacebook: string;
    idConektaAccount: string;
    lastLoginDate: Date;
    active: boolean;
    deleted: boolean;
    createdAt: Date;
    updatedAt: Date;
    town: Town;
    role: Role;
    organization: Organization;
    devices: Device[];
    notifications: Notifications[];
    historyPayments: HistoryPayment[];
    cards: Card[];
    billingInformation: BillingInformation;
    static hashPassword(user: User): Promise<void>;
    validPassword(password: string): any;
    validAlexaPassword(password: string): Promise<{
        checkPass: any;
        isNew: boolean;
    }>;
    hashNewPassword(password: string): Promise<any>;
}
